#!/bin/bash
#
# Master test script.
#


DEFAULT_PROJECT="wplib"

# Return codes from functions.
RETURN_OK="0"
RETURN_NOK="1"
RETURN_NOSCRIPT="2"
RETURN_NOEXEC="3"
VALID_RETURN=42


exec_cmd()
{
	EXECTMPFILE="`mktemp /tmp/BoxTest.XXX`"

	echo "$ECHO_PREFIX ${RESET}		- EXEC: \"${CYAN}$@${RESET}\""
	$@ >& $EXECTMPFILE
	RETURN="$?"
	if [ "$RETURN" == "$RETURN_OK" ]
	then
		echo "$ECHO_PREFIX ${RESET}		- ${GREEN}EXEC: RETURN($RETURN)${RESET}"
		cat $EXECTMPFILE | sed "s/^/$ECHO_PREFIX ${RESET}		- ${GREEN}EXEC:${RESET} /"
	else
		echo "$ECHO_PREFIX ${RESET}		- ${RED}EXEC: RETURN($RETURN)${RESET}"
		cat $EXECTMPFILE | sed "s/^/$ECHO_PREFIX ${RESET}		- ${RED}EXEC:${RESET} /"
	fi

	return $RETURN
}


echo_info()
{
	echo "$ECHO_PREFIX ${RESET}		- INFO: $@"

	return 0
}


echo_warning()
{
	echo "$ECHO_PREFIX ${RESET}		- ${YELLOW}INFO: $@"

	return 1
}


echo_error()
{
	echo "$ECHO_PREFIX ${RESET}		- ${RED}INFO: $@"

	return 2
}


################################################################################
# OK. This is where things get funky, so I need to explain the flow
# 1. THIS script will call scripts within /opt/box/tests.
# 2. Each of those scripts will SOURCE THIS script to pick up some common functions.
#
# So place everything above here that should be included in called scripts.
# This means the following will avoid an endless loop.
if [ "$AVOID_LOOP" == "OK" ]
then
	return
fi
AVOID_LOOP="OK"
export AVOID_LOOP


ctrl_c()
{
        tput sgr0
	echo ""
	echo "$ECHO_PREFIX Aborting script."
	exit
}

trap ctrl_c INT


error_nts()
{
	RETURN="$?"
	echo "$ECHO_PREFIX ${YELLOW}Unknown command.${RESET}"
	return $RETURN
}


d_ls()
{
	for SCRIPT in $ALLSCRIPTS
	do
		if [[ -x "/opt/box/tests/$SCRIPT" &&  -f "/opt/box/tests/$SCRIPT" ]]
		then
			STDOUT="`/opt/box/tests/$SCRIPT info`"
			if [ "$?" == "$VALID_RETURN" ]
			then
				echo "$STDOUT"
			fi
		fi
	done

	return $RETURN_OK
}


d_exec()
{
	SCRIPT="$1"
	shift

	if [ ! -r "/opt/box/tests/$SCRIPT" ]
	then
		echo "$ECHO_PREFIX ${YELLOW}NO SCRIPT	- ${CYAN}${SCRIPT}${RESET}"
		return $RETURN_NOSCRIPT
	fi

	if [ ! -x "/opt/box/tests/$SCRIPT" ]
	then
		echo "$ECHO_PREFIX ${YELLOW}NO EXEC	- ${CYAN}${SCRIPT}${RESET}"
		return $RETURN_NOEXEC
	fi

	echo "################################################################################"
	echo "$ECHO_PREFIX ${YELLOW}Run${RESET}	- ${CYAN}${SCRIPT}${RESET}"
	/opt/box/tests/$SCRIPT "$@"
	RETURN="$?"
	if [ "$RETURN" == "$RETURN_OK" ]
	then
		echo "$ECHO_PREFIX ${GREEN}OK${RESET}		- ${CYAN}${SCRIPT}${RESET}"
	else
		echo "$ECHO_PREFIX ${RED}FAILED($RETURN)${RESET}	- ${CYAN}${SCRIPT}${RESET}"
	fi
	echo ""

	return $RETURN_OK
}


d_help()
{
	cat <<EOF
box test 		- Show this help.
box test ${GREEN}list${RESET}		- List all scripts in /opt/box/tests.
box test ${GREEN}run${RESET}		- Run all tests in /opt/box/tests.
box test ${GREEN}run [script]${RESET}	- Run a specific test.
EOF
}


################################################################################
ALLSCRIPTS="`ls -1 /opt/box/tests`"

CMD="$1"
shift
SCRIPTS="$@"

case $CMD in
	'list'|'ls')
		d_ls
		;;

	''|'help')
		d_help
		;;

	'run')
		if [ "$1" == "" ]
		then
			SCRIPTS="$ALLSCRIPTS"
		fi
		;;

	*)
		error_nts
		d_help
		exit 1
		;;
esac


for SCRIPT in $SCRIPTS
do
	d_exec $SCRIPT
done

rm -f /tmp/BoxTest.*

exit 0

